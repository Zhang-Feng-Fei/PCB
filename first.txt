小结：现在总结一下今天学的两点内容：
1、初始化一个Git仓库，使用git init命令；
2、添加文件到Git仓库，分两步：
1）使用命令git add <file>，注意，可反复多次使用，添加多个文件，实际上就是把文件修改添加到暂存区；
2）使用命令git commit -m <message>，完成，实际上就是把暂存区的所有内容提交到当前分支，提交后暂存区就变成空白了（见picture3）。
注：因为我们创建Git版本库时，Git自动为我们创建了唯一一个master分支，所以，现在，git commit就是往master分支上提交更改；
注：Git管理的是修改，而不是文件。

小结
1、要随时掌握工作区的状态，使用git status命令，实际上就是查看暂存区的状态。（见picture2）
2、如果git status告诉你有文件被修改过，用git diff可以查看修改内容；
3、git diff HEAD -- first.txt命令可以查看工作区和版本库里面最新版本的区别

小结
1、HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id；例子：$ git reset --hard HEAD^；
2、上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100；
3、回到之后的版本：$ git reset --hard 1094a（版本号）；
4、穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本；
5、如果嫌输出信息太多，看得眼花缭乱的，可以试试加上--pretty=oneline参数：$ git log --pretty=oneline；
6、要重返未来，用git reflog查看操作的命令历史，以便确定要回到未来的哪个版本。

小结
1、Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD。（见picture1）

小结
1、若未添加到暂存区，想退回到修改前：$ git checkout -- test.txt可以把test.txt在工作区的修改全部撤销；
2、若已添加到暂存区，想退回到修改前；首先git reset HEAD <file>可以把暂存区修改重新放回到工作区，然后同第1不操作；
3、若暂存区提交到了版本库，想退回到修改前，可回退到上一个版本。前提是本地版本库还未推送到远程。
注：就是让这个文件回到最近一次git commit或git add时的状态。

小结
1、工作区文件删错了，可把版本库内的文件恢复到工作区：$ git checkout -- test.txt；
2、git checkout其实是用版本库里的版本替换工作区的版本。
注：从来没有被添加到版本库就被删除的文件，是无法恢复的！
注：只能恢复文件到最新版本，会丢失最近一次提交后修改的内容。

注：
1、工作区：相当于windows系统中的一个文件夹；
2、工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库；
3、版本库管理着工作区中文件的历次改动信息；
4、删除文件也是一种修改，也需要进行git add 与 git commit -m操作或者git rm 与 git commit -m从版本库中删除该文件。






1、只要注册一个GitHub账号，就可以免费获得Git远程仓库；
